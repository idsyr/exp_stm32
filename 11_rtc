LL_RCC_LSI_Enable(); //lse
while(LL_RCC_LSI_IsReady()!=1);

LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
LL_PWR_EnableBkUpAccess();
LL_RCCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSI);
LL_RCC_EnableRTC();

LL_RTC_DisableWriteProtection(RTC);
LL_RTC_EnableInitMode();
LL_RTC_IsactiveFlag_INIT();
//dis enab

LL_RTC_SetAsynchPrescaler(RTC, 0x7f)
LL_RTC_SetSynchPrescaler(RTC, 0x0137

Ll_RTC_SetHourFormat
LL_RTC_DATE_Config
LL_RTC_TIME_Config

LL_RTC_ENABLEShadowRegBypass()

LL_RTC_DisableWriteProtection(RTC);

LL_RTC_ALMA_Disable(RTC);
while(!LL_RTC_IsActiveFlag_ALRAW(RTC));
LL_RTC_ALMA_SetMAsk(RTC, LL_RTC_ALMA_MASK_ALL);
LL_RTC_ALMA_ConfigTime(RTC, LL_RTC_ALMA_TIME_FORMAT_AM, 00, 00, 00);
LL_RTC_ALMA_ENABLE(RTC);
LL_RTC_EnableT_ALRA(RTC);

//wrprt

NVIC_EnableIRQ(RTC_IRQn);
NVIC_SetPriority(RTC_IRQn, 0);
LL_EXIT_EnableIT_0_31(LL_EXIT_LINE_17);
LL_EXTI_EnableFallingTrig_0_31(LL_EXIT_LINE_17);

void RTC_IRQHandler{
     ...
     LL_RTC_ClearFlag_ALRA(RTC);
     LL_EXTI_ClearFlag_0_31(LL_EXTI_LINE_17);
     time = LL_RTC_TIME_Get(RTC); //DATE
}